plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.sora'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'
    annotationProcessor 'org.projectlombok:lombok'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.google.zxing', name: 'core', version: '3.3.3'
    compile group: 'com.google.zxing', name: 'javase', version: '3.3.3'
    compile group: 'com.github.penggle', name: 'kaptcha', version: '2.3.2'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'com.alibaba', name: 'druid', version: '1.2.1'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.75'
    compile group: 'com.alipay.sdk', name: 'alipay-sdk-java', version: '4.10.170.ALL'
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '4.5.14'
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-ecs', version: '4.21.0'
    compile group: 'cn.afterturn', name: 'easypoi-spring-boot-starter', version: '4.2.0'
    compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.3.0'
    compile group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.4.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

task clearJar(type: Delete) {
    delete "$buildDir\\libs\\lib"
}

task copyJar(type: Copy, dependsOn: 'clearJar') {
    from configurations.compileClasspath
    into "$buildDir\\libs\\lib"
}

bootJar {
    excludes = ["*.jar","*.yml","*.properties"]
    dependsOn clearJar
    dependsOn copyJar

    manifest {
        attributes "Manifest-Version": 1.0, 'Class-Path': configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}

test {
    useJUnitPlatform()
}
